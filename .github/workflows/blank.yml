name: Check SSH Keys
on: [push, pull_request]

jobs:
  check-ssh-keys:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Permissions for Private Key
        run: |
          echo "${{ secrets.private_key }}" > private_key
          chmod 400 private_key

      - name: Verify SSH Keys
        run: |
          rsa_key_found=false
          $public_key = " "
          $generate_public_key = " "
          # Check if the public key exists in the "keys" folder
          for key_file in $(ls keys/*.pub); do
            key_info=$(ssh-keygen -l -f $key_file)
            if [[ $key_info == *"RSA"* && $key_info == *"2048"* ]]; then
              rsa_key_found=true
              echo "RSA key (2048-bit) found: $key_file"
              $public_key = cat $key_file
              break
            else
              echo "Invalid key: $key_file"
            fi
          done

          # Check if the private key exists in GitHub secrets
          if [[ -n "${{ secrets.private_key }}" ]]; then
            echo "Private key found in GitHub secrets."
          else
            echo "Private key not found in GitHub secrets."
            exit 1
          fi

          # Check if both the public and private keys are present
          if [[ $rsa_key_found == true ]]; then
            echo "RSA key pair (2048-bit) complete."
          else
            echo "RSA key pair (2048-bit) missing."
            exit 1
          fi

          # Generate the corresponding public key from the private key
          ssh-keygen -y -f private_key > generated_public_key.pub
          # Verify the match between the generated public key and the public key in the "keys" folder
          $generate_public_key = cat generate_public_key.pub
          diff generated_public_key.pub keys/*.pub
          diff_output=$(diff generated_public_key.pub keys/*.pub)
          if [[ -z "${diff_output}" ]]; then
            echo "Private key matches the public key."
          else
            echo "Private key does not match the public key."
            exit 1
          fi

          # Clean up temporary files
          rm private_key generated_public_key.pub